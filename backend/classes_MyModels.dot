digraph "classes_MyModels" {
rankdir=BT
charset="utf-8"
"users.models.Address" [color="black", fontcolor="black", label=<{Address|city : CharField<br ALIGN="LEFT"/>country : CharField<br ALIGN="LEFT"/>postal_code : CharField<br ALIGN="LEFT"/>street : CharField<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.admin.AddressAdmin" [color="black", fontcolor="black", label=<{AddressAdmin|list_display : tuple<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.serializers.AddressSerializer" [color="black", fontcolor="black", label=<{AddressSerializer|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.models.Application" [color="black", fontcolor="black", label=<{Application|STATUS_CHOICES : list<br ALIGN="LEFT"/>applicant : ForeignKey<br ALIGN="LEFT"/>applied_at : DateTimeField<br ALIGN="LEFT"/>gig : ForeignKey<br ALIGN="LEFT"/>status : CharField<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.serializers.ApplicationSerializer" [color="black", fontcolor="black", label=<{ApplicationSerializer|applicant_name : SerializerMethodField<br ALIGN="LEFT"/>applicant_username : SerializerMethodField<br ALIGN="LEFT"/>gig_title : CharField<br ALIGN="LEFT"/>status_display : CharField<br ALIGN="LEFT"/>|create(validated_data)<br ALIGN="LEFT"/>get_applicant_name(obj)<br ALIGN="LEFT"/>get_applicant_username(obj)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"gamification.models.Badge" [color="black", fontcolor="black", label=<{Badge|code : CharField<br ALIGN="LEFT"/>description : TextField<br ALIGN="LEFT"/>icon : CharField<br ALIGN="LEFT"/>name : CharField<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.serializers.BadgeSerializer" [color="black", fontcolor="black", label=<{BadgeSerializer|unlocked : BooleanField<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.views.BadgeViewSet" [color="black", fontcolor="black", label=<{BadgeViewSet|permission_classes : list<br ALIGN="LEFT"/>serializer_class<br ALIGN="LEFT"/>|get_queryset()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"chat.apps.ChatConfig" [color="black", fontcolor="black", label=<{ChatConfig|default_auto_field : str<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"chat.consumers.ChatConsumer" [color="black", fontcolor="black", label=<{ChatConsumer|other_username<br ALIGN="LEFT"/>room_group_name : str<br ALIGN="LEFT"/>room_name : str<br ALIGN="LEFT"/>user<br ALIGN="LEFT"/>|chat_message(event)<br ALIGN="LEFT"/>connect()<br ALIGN="LEFT"/>disconnect(close_code)<br ALIGN="LEFT"/>receive(text_data)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"chat.views.ChatHistoryView" [color="black", fontcolor="black", label=<{ChatHistoryView|permission_classes : list<br ALIGN="LEFT"/>|get(request, username)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"users.admin.ClientAdmin" [color="black", fontcolor="black", label=<{ClientAdmin|list_display : tuple<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.models.ClientInstruction" [color="black", fontcolor="black", label=<{ClientInstruction|description : TextField<br ALIGN="LEFT"/>file : FileField<br ALIGN="LEFT"/>gig : ForeignKey<br ALIGN="LEFT"/>uploaded_at : DateTimeField<br ALIGN="LEFT"/>uploaded_by : ForeignKey<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.serializers.ClientInstructionSerializer" [color="black", fontcolor="black", label=<{ClientInstructionSerializer|file_url : SerializerMethodField<br ALIGN="LEFT"/>|create(validated_data)<br ALIGN="LEFT"/>get_file_url(instance)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"users.models.ClientProfile" [color="black", fontcolor="black", label=<{ClientProfile|business_description : TextField<br ALIGN="LEFT"/>organization : CharField<br ALIGN="LEFT"/>user : OneToOneField<br ALIGN="LEFT"/>website : URLField<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.serializers.ClientProfileSerializer" [color="black", fontcolor="black", label=<{ClientProfileSerializer|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.adapters.CustomAccountAdapter" [color="black", fontcolor="black", label=<{CustomAccountAdapter|<br ALIGN="LEFT"/>|clean_username(username)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"users.views.CustomLogoutView" [color="black", fontcolor="black", label=<{CustomLogoutView|<br ALIGN="LEFT"/>|post(request)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"users.serializers.CustomRegisterSerializer" [color="black", fontcolor="black", label=<{CustomRegisterSerializer|cleaned_data : dict<br ALIGN="LEFT"/>first_name : NoneType<br ALIGN="LEFT"/>last_name : NoneType<br ALIGN="LEFT"/>username : NoneType<br ALIGN="LEFT"/>|get_cleaned_data()<br ALIGN="LEFT"/>save(request)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"users.serializers.CustomUserDetailsSerializer" [color="black", fontcolor="black", label=<{CustomUserDetailsSerializer|address<br ALIGN="LEFT"/>client_profile<br ALIGN="LEFT"/>freelancer_profile<br ALIGN="LEFT"/>gamification_profile<br ALIGN="LEFT"/>role : ChoiceField<br ALIGN="LEFT"/>username : SlugField<br ALIGN="LEFT"/>|update(instance, validated_data)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"users.admin.FreelancerAdmin" [color="black", fontcolor="black", label=<{FreelancerAdmin|list_display : tuple<br ALIGN="LEFT"/>|get_skills(obj)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"users.models.FreelancerProfile" [color="black", fontcolor="black", label=<{FreelancerProfile|bio : TextField<br ALIGN="LEFT"/>portfolio_links : JSONField<br ALIGN="LEFT"/>skills : ManyToManyField<br ALIGN="LEFT"/>user : OneToOneField<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.serializers.FreelancerProfileSerializer" [color="black", fontcolor="black", label=<{FreelancerProfileSerializer|skill_ids : PrimaryKeyRelatedField<br ALIGN="LEFT"/>skills<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.apps.GamificationConfig" [color="black", fontcolor="black", label=<{GamificationConfig|default_auto_field : str<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>|ready()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"gamification.consumers.GamificationConsumer" [color="black", fontcolor="black", label=<{GamificationConsumer|group_name : str<br ALIGN="LEFT"/>user<br ALIGN="LEFT"/>|connect()<br ALIGN="LEFT"/>disconnect(code)<br ALIGN="LEFT"/>gamification_event(event)<br ALIGN="LEFT"/>receive(text_data)<br ALIGN="LEFT"/>websocket_receive(message)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"gamification.models.GamificationProfile" [color="black", fontcolor="black", label=<{GamificationProfile|level : PositiveIntegerField<br ALIGN="LEFT"/>points : PositiveIntegerField<br ALIGN="LEFT"/>user : OneToOneField<br ALIGN="LEFT"/>xp : PositiveIntegerField<br ALIGN="LEFT"/>|add_points(amount: int)<br ALIGN="LEFT"/>add_xp(amount: int)<br ALIGN="LEFT"/>spend_points(amount: int): bool<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"gamification.admin.GamificationProfileAdmin" [color="black", fontcolor="black", label=<{GamificationProfileAdmin|list_display : tuple<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.serializers.GamificationProfileSerializer" [color="black", fontcolor="black", label=<{GamificationProfileSerializer|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.models.Gig" [color="black", fontcolor="black", label=<{Gig|STATUS_CHOICES : list<br ALIGN="LEFT"/>client : ForeignKey<br ALIGN="LEFT"/>created_at : DateTimeField<br ALIGN="LEFT"/>description : TextField<br ALIGN="LEFT"/>due_date : DateField<br ALIGN="LEFT"/>freelancer : ForeignKey<br ALIGN="LEFT"/>price : DecimalField<br ALIGN="LEFT"/>skills : ManyToManyField<br ALIGN="LEFT"/>status : CharField<br ALIGN="LEFT"/>title : CharField<br ALIGN="LEFT"/>updated_at : DateTimeField<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.admin.GigAdmin" [color="black", fontcolor="black", label=<{GigAdmin|list_display : tuple<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.filters.GigFilter" [color="black", fontcolor="black", label=<{GigFilter|max_price : NumberFilter<br ALIGN="LEFT"/>min_price : NumberFilter<br ALIGN="LEFT"/>skill_ids : BaseInFilter<br ALIGN="LEFT"/>|filter_max_price(queryset, name, value)<br ALIGN="LEFT"/>filter_min_price(queryset, name, value)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"gigs.serializers.GigSerializer" [color="black", fontcolor="black", label=<{GigSerializer|already_applied : SerializerMethodField<br ALIGN="LEFT"/>applications<br ALIGN="LEFT"/>client_name : SerializerMethodField<br ALIGN="LEFT"/>client_username : SerializerMethodField<br ALIGN="LEFT"/>freelancer_name : SerializerMethodField<br ALIGN="LEFT"/>freelancer_username : SerializerMethodField<br ALIGN="LEFT"/>latest_instruction : SerializerMethodField<br ALIGN="LEFT"/>latest_submission : SerializerMethodField<br ALIGN="LEFT"/>review<br ALIGN="LEFT"/>skill_ids : PrimaryKeyRelatedField<br ALIGN="LEFT"/>skills<br ALIGN="LEFT"/>status_display : CharField<br ALIGN="LEFT"/>submissions<br ALIGN="LEFT"/>|create(validated_data)<br ALIGN="LEFT"/>get_already_applied(obj)<br ALIGN="LEFT"/>get_client_name(obj)<br ALIGN="LEFT"/>get_client_username(obj)<br ALIGN="LEFT"/>get_freelancer_name(obj)<br ALIGN="LEFT"/>get_freelancer_username(obj)<br ALIGN="LEFT"/>get_latest_instruction(obj)<br ALIGN="LEFT"/>get_latest_submission(obj)<br ALIGN="LEFT"/>validate_due_date(value)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"gigs.models.GigSubmission" [color="black", fontcolor="black", label=<{GigSubmission|file : FileField<br ALIGN="LEFT"/>gig : ForeignKey<br ALIGN="LEFT"/>message : TextField<br ALIGN="LEFT"/>submitted_at : DateTimeField<br ALIGN="LEFT"/>user : ForeignKey<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.serializers.GigSubmissionListSerializer" [color="black", fontcolor="black", label=<{GigSubmissionListSerializer|file_url : SerializerMethodField<br ALIGN="LEFT"/>|get_file_url(instance)<br ALIGN="LEFT"/>to_representation(instance)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"gigs.serializers.GigSubmissionSerializer" [color="black", fontcolor="black", label=<{GigSubmissionSerializer|<br ALIGN="LEFT"/>|create(validated_data)<br ALIGN="LEFT"/>to_representation(instance)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"gigs.views.GigViewSet" [color="black", fontcolor="black", label=<{GigViewSet|filter_backends : list<br ALIGN="LEFT"/>filterset_class<br ALIGN="LEFT"/>permission_classes : list<br ALIGN="LEFT"/>queryset<br ALIGN="LEFT"/>serializer_class<br ALIGN="LEFT"/>|apply(request, pk)<br ALIGN="LEFT"/>approve_submission(request, pk)<br ALIGN="LEFT"/>assign(request, pk)<br ALIGN="LEFT"/>complete(request, pk)<br ALIGN="LEFT"/>confirm(request, pk)<br ALIGN="LEFT"/>decline_submission(request, pk)<br ALIGN="LEFT"/>delete_application(request, pk, freelancer_id)<br ALIGN="LEFT"/>get_serializer_context()<br ALIGN="LEFT"/>list_instructions(request, pk)<br ALIGN="LEFT"/>list_submissions(request, pk)<br ALIGN="LEFT"/>my(request)<br ALIGN="LEFT"/>perform_create(serializer)<br ALIGN="LEFT"/>perform_update(serializer)<br ALIGN="LEFT"/>review(request, pk)<br ALIGN="LEFT"/>submit_instruction(request, pk)<br ALIGN="LEFT"/>submit_work(request, pk)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"gigs.apps.GigsConfig" [color="black", fontcolor="black", label=<{GigsConfig|default_auto_field : str<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.views.IsClientOrReadOnly" [color="black", fontcolor="black", label=<{IsClientOrReadOnly|<br ALIGN="LEFT"/>|has_object_permission(request, view, obj)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"chat.middleware.JWTAuthMiddleware" [color="black", fontcolor="black", label=<{JWTAuthMiddleware|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.serializers.LeaderboardEntrySerializer" [color="black", fontcolor="black", label=<{LeaderboardEntrySerializer|level : IntegerField<br ALIGN="LEFT"/>points : IntegerField<br ALIGN="LEFT"/>profile_picture : ImageField<br ALIGN="LEFT"/>xp : IntegerField<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.views.LeaderboardViewSet" [color="black", fontcolor="black", label=<{LeaderboardViewSet|permission_classes : list<br ALIGN="LEFT"/>|clients(request)<br ALIGN="LEFT"/>freelancers(request)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"chat.models.Message" [color="black", fontcolor="black", label=<{Message|content : TextField<br ALIGN="LEFT"/>recipient : ForeignKey<br ALIGN="LEFT"/>sender : ForeignKey<br ALIGN="LEFT"/>timestamp : DateTimeField<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"chat.serializers.MessageSerializer" [color="black", fontcolor="black", label=<{MessageSerializer|recipient<br ALIGN="LEFT"/>sender<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.models.UserBenefit.Meta" [color="black", fontcolor="black", label=<{Meta|unique_together : tuple<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.models.UserMissionProgress.Meta" [color="black", fontcolor="black", label=<{Meta|unique_together : tuple<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.models.UserBadge.Meta" [color="black", fontcolor="black", label=<{Meta|unique_together : tuple<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.serializers.GamificationProfileSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : list<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.serializers.MissionSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : str<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.serializers.UserMissionProgressSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : str<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>read_only_fields : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.serializers.BadgeSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : str<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.serializers.UserBadgeSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : str<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.serializers.PlatformBenefitSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : str<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.serializers.UserBenefitSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : str<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.serializers.LeaderboardEntrySerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : list<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.models.Application.Meta" [color="black", fontcolor="black", label=<{Meta|unique_together : tuple<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.filters.GigFilter.Meta" [color="black", fontcolor="black", label=<{Meta|fields : list<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.filters.ReviewFilter.Meta" [color="black", fontcolor="black", label=<{Meta|fields : dict<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.serializers.ReviewSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|extra_kwargs : dict<br ALIGN="LEFT"/>fields : list<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>read_only_fields : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.serializers.GigSubmissionSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : list<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>read_only_fields : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.serializers.GigSubmissionListSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : list<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>read_only_fields : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.serializers.ClientInstructionSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : list<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>read_only_fields : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.serializers.ApplicationSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : list<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>read_only_fields : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.serializers.GigSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : list<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>read_only_fields : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"chat.models.Message.Meta" [color="black", fontcolor="black", label=<{Meta|ordering : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"chat.serializers.UserMiniSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : tuple<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"chat.serializers.MessageSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : str<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.serializers.AddressSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : list<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.serializers.SkillSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : list<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.serializers.CustomRegisterSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : tuple<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.serializers.FreelancerProfileSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : list<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.serializers.ClientProfileSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : list<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.serializers.CustomUserDetailsSerializer.Meta" [color="black", fontcolor="black", label=<{Meta|fields : list<br ALIGN="LEFT"/>model<br ALIGN="LEFT"/>read_only_fields : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.migrations.0003_alter_gamificationprofile_user.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.migrations.0009_delete_tournament.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.migrations.0007_badge_code_mission_code.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.migrations.0012_usermissionprogress_updated_at.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.migrations.0011_usermissionprogress_current_count.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.migrations.0006_tournament.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.migrations.0008_usermissionprogress_seen.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.migrations.0001_initial.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>initial : bool<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.migrations.0002_alter_badge_icon.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.migrations.0010_mission_goal_count_mission_track_model.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.migrations.0005_userbenefit.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.migrations.0004_platformbenefit_gamificationprofile_points_and_more.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.migrations.0002_gig_price.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.migrations.0006_gig_skills.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.migrations.0009_gig_due_date.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.migrations.0008_alter_gig_status.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.migrations.0005_gigsubmission.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.migrations.0007_alter_gig_status.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.migrations.0004_application.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.migrations.0001_initial.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>initial : bool<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.migrations.0003_alter_gig_status.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.migrations.0010_gigsubmission_user_alter_gigsubmission_file_and_more.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"chat.migrations.0001_initial.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>initial : bool<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.migrations.0004_user_username.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.migrations.0005_skill.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.migrations.0003_remove_freelancerprofile_xp_remove_user_phone_number.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.migrations.0006_remove_freelancerprofile_skills_and_more.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.migrations.0001_initial.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>initial : bool<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.migrations.0002_user_role.Migration" [color="black", fontcolor="black", label=<{Migration|dependencies : list<br ALIGN="LEFT"/>operations : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.models.Mission" [color="black", fontcolor="black", label=<{Mission|DAILY : str<br ALIGN="LEFT"/>MONTHLY : str<br ALIGN="LEFT"/>ONCE : str<br ALIGN="LEFT"/>TYPE_CHOICES : list<br ALIGN="LEFT"/>WEEKLY : str<br ALIGN="LEFT"/>YEARLY : str<br ALIGN="LEFT"/>code : CharField<br ALIGN="LEFT"/>description : TextField<br ALIGN="LEFT"/>goal_count : PositiveIntegerField<br ALIGN="LEFT"/>is_active : BooleanField<br ALIGN="LEFT"/>point_reward : PositiveIntegerField<br ALIGN="LEFT"/>title : CharField<br ALIGN="LEFT"/>track_model : CharField<br ALIGN="LEFT"/>type : CharField<br ALIGN="LEFT"/>xp_reward : PositiveIntegerField<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.serializers.MissionSerializer" [color="black", fontcolor="black", label=<{MissionSerializer|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.views.MissionViewSet" [color="black", fontcolor="black", label=<{MissionViewSet|permission_classes : list<br ALIGN="LEFT"/>queryset<br ALIGN="LEFT"/>serializer_class<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.views.MyApplicationsView" [color="black", fontcolor="black", label=<{MyApplicationsView|permission_classes : list<br ALIGN="LEFT"/>|get(request)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"gamification.models.PlatformBenefit" [color="black", fontcolor="black", label=<{PlatformBenefit|cost : PositiveIntegerField<br ALIGN="LEFT"/>description : TextField<br ALIGN="LEFT"/>effect_code : CharField<br ALIGN="LEFT"/>name : CharField<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.serializers.PlatformBenefitSerializer" [color="black", fontcolor="black", label=<{PlatformBenefitSerializer|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.views.PlatformBenefitViewSet" [color="black", fontcolor="black", label=<{PlatformBenefitViewSet|permission_classes : list<br ALIGN="LEFT"/>queryset<br ALIGN="LEFT"/>serializer_class<br ALIGN="LEFT"/>|buy(request, pk)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"users.views.PublicUserProfileView" [color="black", fontcolor="black", label=<{PublicUserProfileView|lookup_field : str<br ALIGN="LEFT"/>permission_classes : list<br ALIGN="LEFT"/>queryset<br ALIGN="LEFT"/>serializer_class<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.models.Review" [color="black", fontcolor="black", label=<{Review|created_at : DateTimeField<br ALIGN="LEFT"/>feedback : TextField<br ALIGN="LEFT"/>gig : OneToOneField<br ALIGN="LEFT"/>rating : PositiveSmallIntegerField<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.admin.ReviewAdmin" [color="black", fontcolor="black", label=<{ReviewAdmin|list_display : tuple<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.filters.ReviewFilter" [color="black", fontcolor="black", label=<{ReviewFilter|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.serializers.ReviewSerializer" [color="black", fontcolor="black", label=<{ReviewSerializer|freelancer_id : IntegerField<br ALIGN="LEFT"/>gig_title : CharField<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gigs.views.ReviewViewSet" [color="black", fontcolor="black", label=<{ReviewViewSet|filter_backends : list<br ALIGN="LEFT"/>filterset_class<br ALIGN="LEFT"/>permission_classes : list<br ALIGN="LEFT"/>queryset<br ALIGN="LEFT"/>serializer_class<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.serializers.SafeTokenRefreshSerializer" [color="black", fontcolor="black", label=<{SafeTokenRefreshSerializer|<br ALIGN="LEFT"/>|validate(attrs)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"users.models.Skill" [color="black", fontcolor="black", label=<{Skill|name : CharField<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.serializers.SkillSerializer" [color="black", fontcolor="black", label=<{SkillSerializer|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.views.SkillViewSet" [color="black", fontcolor="black", label=<{SkillViewSet|permission_classes : list<br ALIGN="LEFT"/>queryset<br ALIGN="LEFT"/>serializer_class<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.models.User" [color="black", fontcolor="black", label=<{User|REQUIRED_FIELDS : list<br ALIGN="LEFT"/>ROLE_CHOICES : list<br ALIGN="LEFT"/>USERNAME_FIELD : str<br ALIGN="LEFT"/>address : OneToOneField<br ALIGN="LEFT"/>date_joined : DateTimeField<br ALIGN="LEFT"/>email : EmailField<br ALIGN="LEFT"/>first_name : CharField<br ALIGN="LEFT"/>groups : ManyToManyField<br ALIGN="LEFT"/>is_active : BooleanField<br ALIGN="LEFT"/>is_staff : BooleanField<br ALIGN="LEFT"/>last_name : CharField<br ALIGN="LEFT"/>objects : UserManager<br ALIGN="LEFT"/>profile_picture : ImageField<br ALIGN="LEFT"/>role : CharField<br ALIGN="LEFT"/>user_permissions : ManyToManyField<br ALIGN="LEFT"/>username : SlugField<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"users.admin.UserAdmin" [color="black", fontcolor="black", label=<{UserAdmin|add_fieldsets : tuple<br ALIGN="LEFT"/>fieldsets : tuple<br ALIGN="LEFT"/>filter_horizontal : tuple<br ALIGN="LEFT"/>list_display : list<br ALIGN="LEFT"/>ordering : list<br ALIGN="LEFT"/>readonly_fields : tuple<br ALIGN="LEFT"/>search_fields : list<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.models.UserBadge" [color="black", fontcolor="black", label=<{UserBadge|awarded_at : DateTimeField<br ALIGN="LEFT"/>badge : ForeignKey<br ALIGN="LEFT"/>user : ForeignKey<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.serializers.UserBadgeSerializer" [color="black", fontcolor="black", label=<{UserBadgeSerializer|badge<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.views.UserBadgeViewSet" [color="black", fontcolor="black", label=<{UserBadgeViewSet|permission_classes : list<br ALIGN="LEFT"/>serializer_class<br ALIGN="LEFT"/>|get_queryset(): QuerySet[Any]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"gamification.models.UserBenefit" [color="black", fontcolor="black", label=<{UserBenefit|acquired_at : DateTimeField<br ALIGN="LEFT"/>benefit : ForeignKey<br ALIGN="LEFT"/>user : ForeignKey<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.serializers.UserBenefitSerializer" [color="black", fontcolor="black", label=<{UserBenefitSerializer|benefit<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.views.UserBenefitViewSet" [color="black", fontcolor="black", label=<{UserBenefitViewSet|permission_classes : list<br ALIGN="LEFT"/>serializer_class<br ALIGN="LEFT"/>|get_queryset(): QuerySet[Any]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"chat.serializers.UserMiniSerializer" [color="black", fontcolor="black", label=<{UserMiniSerializer|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"gamification.models.UserMissionProgress" [color="black", fontcolor="black", label=<{UserMissionProgress|completed : BooleanField<br ALIGN="LEFT"/>completed_at : DateTimeField<br ALIGN="LEFT"/>current_count : PositiveIntegerField<br ALIGN="LEFT"/>mission : ForeignKey<br ALIGN="LEFT"/>seen : BooleanField<br ALIGN="LEFT"/>updated_at : DateTimeField<br ALIGN="LEFT"/>user : ForeignKey<br ALIGN="LEFT"/>|complete()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"gamification.serializers.UserMissionProgressSerializer" [color="black", fontcolor="black", label=<{UserMissionProgressSerializer|current_count : IntegerField<br ALIGN="LEFT"/>goal_count : SerializerMethodField<br ALIGN="LEFT"/>mission<br ALIGN="LEFT"/>seen : BooleanField<br ALIGN="LEFT"/>|get_goal_count(obj)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"gamification.views.UserMissionProgressViewSet" [color="black", fontcolor="black", label=<{UserMissionProgressViewSet|permission_classes : list<br ALIGN="LEFT"/>serializer_class<br ALIGN="LEFT"/>|complete(request, pk)<br ALIGN="LEFT"/>get_queryset(): QuerySet[Any]<br ALIGN="LEFT"/>get_serializer_context()<br ALIGN="LEFT"/>recent(request)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"users.apps.UsersConfig" [color="black", fontcolor="black", label=<{UsersConfig|default_auto_field : str<br ALIGN="LEFT"/>name : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"chat.models.Message" -> "chat.serializers.MessageSerializer.Meta" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"chat.serializers.UserMiniSerializer" -> "chat.serializers.MessageSerializer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="sender", style="solid"];
"chat.serializers.UserMiniSerializer" -> "chat.serializers.MessageSerializer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="recipient", style="solid"];
"gamification.models.Badge" -> "gamification.serializers.BadgeSerializer.Meta" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"gamification.models.GamificationProfile" -> "gamification.serializers.GamificationProfileSerializer.Meta" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"gamification.models.Mission" -> "gamification.serializers.MissionSerializer.Meta" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"gamification.models.PlatformBenefit" -> "gamification.serializers.PlatformBenefitSerializer.Meta" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"gamification.models.UserBadge" -> "gamification.serializers.UserBadgeSerializer.Meta" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"gamification.models.UserBenefit" -> "gamification.serializers.UserBenefitSerializer.Meta" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"gamification.models.UserMissionProgress" -> "gamification.serializers.UserMissionProgressSerializer.Meta" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"gamification.serializers.BadgeSerializer" -> "gamification.serializers.UserBadgeSerializer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="badge", style="solid"];
"gamification.serializers.BadgeSerializer" -> "gamification.views.BadgeViewSet" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="serializer_class", style="solid"];
"gamification.serializers.GamificationProfileSerializer" -> "users.serializers.CustomUserDetailsSerializer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="gamification_profile", style="solid"];
"gamification.serializers.MissionSerializer" -> "gamification.serializers.UserMissionProgressSerializer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="mission", style="solid"];
"gamification.serializers.MissionSerializer" -> "gamification.views.MissionViewSet" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="serializer_class", style="solid"];
"gamification.serializers.PlatformBenefitSerializer" -> "gamification.serializers.UserBenefitSerializer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="benefit", style="solid"];
"gamification.serializers.PlatformBenefitSerializer" -> "gamification.views.PlatformBenefitViewSet" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="serializer_class", style="solid"];
"gamification.serializers.UserBadgeSerializer" -> "gamification.views.UserBadgeViewSet" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="serializer_class", style="solid"];
"gamification.serializers.UserBenefitSerializer" -> "gamification.views.UserBenefitViewSet" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="serializer_class", style="solid"];
"gamification.serializers.UserMissionProgressSerializer" -> "gamification.views.UserMissionProgressViewSet" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="serializer_class", style="solid"];
"gigs.filters.GigFilter" -> "gigs.views.GigViewSet" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="filterset_class", style="solid"];
"gigs.filters.ReviewFilter" -> "gigs.views.ReviewViewSet" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="filterset_class", style="solid"];
"gigs.models.Application" -> "gigs.serializers.ApplicationSerializer.Meta" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"gigs.models.ClientInstruction" -> "gigs.serializers.ClientInstructionSerializer.Meta" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"gigs.models.Gig" -> "gigs.filters.GigFilter.Meta" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"gigs.models.Gig" -> "gigs.serializers.GigSerializer.Meta" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"gigs.models.GigSubmission" -> "gigs.serializers.GigSubmissionListSerializer.Meta" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"gigs.models.GigSubmission" -> "gigs.serializers.GigSubmissionSerializer.Meta" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"gigs.models.Review" -> "gigs.filters.ReviewFilter.Meta" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"gigs.models.Review" -> "gigs.serializers.ReviewSerializer.Meta" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"gigs.serializers.ApplicationSerializer" -> "gigs.serializers.GigSerializer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="applications", style="solid"];
"gigs.serializers.GigSerializer" -> "gigs.views.GigViewSet" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="serializer_class", style="solid"];
"gigs.serializers.GigSubmissionListSerializer" -> "gigs.serializers.GigSerializer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="submissions", style="solid"];
"gigs.serializers.ReviewSerializer" -> "gigs.serializers.GigSerializer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="review", style="solid"];
"gigs.serializers.ReviewSerializer" -> "gigs.views.ReviewViewSet" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="serializer_class", style="solid"];
"users.models.Address" -> "users.serializers.AddressSerializer.Meta" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"users.models.ClientProfile" -> "users.serializers.ClientProfileSerializer.Meta" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"users.models.FreelancerProfile" -> "users.serializers.FreelancerProfileSerializer.Meta" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"users.models.Skill" -> "users.serializers.SkillSerializer.Meta" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="model", style="solid"];
"users.serializers.AddressSerializer" -> "users.serializers.CustomUserDetailsSerializer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="address", style="solid"];
"users.serializers.ClientProfileSerializer" -> "users.serializers.CustomUserDetailsSerializer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="client_profile", style="solid"];
"users.serializers.CustomUserDetailsSerializer" -> "users.views.PublicUserProfileView" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="serializer_class", style="solid"];
"users.serializers.FreelancerProfileSerializer" -> "users.serializers.CustomUserDetailsSerializer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="freelancer_profile", style="solid"];
"users.serializers.SkillSerializer" -> "gigs.serializers.GigSerializer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="skills", style="solid"];
"users.serializers.SkillSerializer" -> "users.serializers.FreelancerProfileSerializer" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="skills", style="solid"];
"users.serializers.SkillSerializer" -> "users.views.SkillViewSet" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="serializer_class", style="solid"];
}
